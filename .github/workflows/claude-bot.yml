name: Claude Code Bot

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]

jobs:
  handle-command:
    runs-on: runs-on=${{ github.run_id }}/runner=2cpu-linux-x64
    # Replace with your GitHub username
    if: github.event.comment.user.login == 'ZerGo0'

    steps:
      - uses: runs-on/action@v2
      - name: Check for command
        id: check-command
        run: |
          COMMENT_BODY=$(cat << 'EOF'
          ${{ github.event.comment.body }}
          EOF
          )
          if echo "$COMMENT_BODY" | grep -q "@ZerGo0 !"; then
            echo "command-found=true" >> $GITHUB_OUTPUT
          else
            echo "command-found=false" >> $GITHUB_OUTPUT
          fi

      - name: Clone bot repository
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/checkout@v4
        with:
          repository: ZerGo0/claude-code-github-bot
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Setup Bun
        if: steps.check-command.outputs.command-found == 'true'
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        if: steps.check-command.outputs.command-found == 'true'
        run: bun install

      - name: Setup Go
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.4"

      - name: Cache Go modules
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', '**/go.work.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup pnpm
        if: steps.check-command.outputs.command-found == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache pnpm store
        if: steps.check-command.outputs.command-found == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install MySQL client
        if: steps.check-command.outputs.command-found == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client

      - name: Install Go tools
        if: steps.check-command.outputs.command-found == 'true'
        run: |
          go install github.com/go-task/task/v3/cmd/task@latest
          go install -tags 'mysql' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          go install github.com/air-verse/air@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Execute command
        if: steps.check-command.outputs.command-found == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          GITHUB_BOT_USERNAME: ${{ github.event.comment.user.login }}
          GIT_USERNAME: ${{ github.event.comment.user.login }}
          GIT_EMAIL: ${{ github.event.comment.user.login }}@users.noreply.github.com
          INPUT_COMMENT_ID: ${{ github.event.comment.id }}
          INPUT_COMMENT_BODY: ${{ github.event.comment.body }}
          INPUT_COMMENT_URL: ${{ github.event.comment.html_url }}
          INPUT_ISSUE_NUMBER: ${{ github.event.issue.number || github.event.pull_request.number }}
          INPUT_REPOSITORY: ${{ github.repository }}
          INPUT_COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          INPUT_EVENT_NAME: ${{ github.event_name }}
          INPUT_IS_PULL_REQUEST: ${{ github.event.issue.pull_request != null }}
          CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
        run: bun run start
